package DanMu.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(9);
  /*package*/ final ConceptDescriptor myConceptCharinfoTable = createDescriptorForCharinfoTable();
  /*package*/ final ConceptDescriptor myConceptCommand = createDescriptorForCommand();
  /*package*/ final ConceptDescriptor myConceptCommands = createDescriptorForCommands();
  /*package*/ final ConceptDescriptor myConceptEmitter = createDescriptorForEmitter();
  /*package*/ final ConceptDescriptor myConceptProjectile = createDescriptorForProjectile();
  /*package*/ final ConceptDescriptor myConceptShot = createDescriptorForShot();
  /*package*/ final ConceptDescriptor myConceptTableRow = createDescriptorForTableRow();
  /*package*/ final ConceptDescriptor myConceptTween = createDescriptorForTween();
  /*package*/ final ConceptDescriptor myConceptWait = createDescriptorForWait();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptCharinfoTable.getId(), 0);
    myIndexMap.put(myConceptCommand.getId(), 1);
    myIndexMap.put(myConceptCommands.getId(), 2);
    myIndexMap.put(myConceptEmitter.getId(), 3);
    myIndexMap.put(myConceptProjectile.getId(), 4);
    myIndexMap.put(myConceptShot.getId(), 5);
    myIndexMap.put(myConceptTableRow.getId(), 6);
    myIndexMap.put(myConceptTween.getId(), 7);
    myIndexMap.put(myConceptWait.getId(), 8);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCharinfoTable, myConceptCommand, myConceptCommands, myConceptEmitter, myConceptProjectile, myConceptShot, myConceptTableRow, myConceptTween, myConceptWait);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptCharinfoTable;
      case 1:
        return myConceptCommand;
      case 2:
        return myConceptCommands;
      case 3:
        return myConceptEmitter;
      case 4:
        return myConceptProjectile;
      case 5:
        return myConceptShot;
      case 6:
        return myConceptTableRow;
      case 7:
        return myConceptTween;
      case 8:
        return myConceptWait;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForCharinfoTable() {
    return new ConceptDescriptorBuilder("DanMu.structure.CharinfoTable", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0xdd4398801e755deL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0xdd4398801e755dfL, "body", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x2c11b20feacb25cfL), true, true, false, new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "996484673865995743"))).children(new String[]{"body"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "996484673865995742")).create();
  }
  private static ConceptDescriptor createDescriptorForCommand() {
    return new ConceptDescriptorBuilder("DanMu.structure.Command", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee2931500f2L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "5346193744260825330")).create();
  }
  private static ConceptDescriptor createDescriptorForCommands() {
    return new ConceptDescriptorBuilder("DanMu.structure.Commands", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x1149ba63db31c4f5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1149ba63db31c4f6L, "commands", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee2931500f2L), true, true, false, new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "1245731709986653430"))).children(new String[]{"commands"}, new boolean[]{true}).sourceNode(new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "1245731709986653429")).create();
  }
  private static ConceptDescriptor createDescriptorForEmitter() {
    return new ConceptDescriptorBuilder("DanMu.structure.Emitter", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee293141835L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4a317ee293141ce4L, "body", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x1149ba63db31c4f5L), true, true, false, new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "5346193744260766948"))).children(new String[]{"body"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "5346193744260765749")).create();
  }
  private static ConceptDescriptor createDescriptorForProjectile() {
    return new ConceptDescriptorBuilder("DanMu.structure.Projectile", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x28d96df7e798c925L)).super_("DanMu.structure.Command").version(1).super_(MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee2931500f2L)).parents("DanMu.structure.Command", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee2931500f2L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).alias("projectile", "").sourceNode(new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "2943504742973229349")).create();
  }
  private static ConceptDescriptor createDescriptorForShot() {
    return new ConceptDescriptorBuilder("DanMu.structure.Shot", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x14aa56594cd51205L)).super_("DanMu.structure.Command").version(1).super_(MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee2931500f2L)).parents("DanMu.structure.Command").parentIds(MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee2931500f2L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x14aa56594cd5120cL, "assetid", new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "1489097568340480524")), new ConceptDescriptorBuilder.Prop(0x14aa56594cd51926L, "speed", new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "1489097568340482342"))).properties("assetid", "speed").childDescriptors(new ConceptDescriptorBuilder.Link(0xdd955d58d002332L, "projectile", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x28d96df7e798c925L), true, false, false, new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "997923168121266994"))).children(new String[]{"projectile"}, new boolean[]{false}).alias("shot", "").sourceNode(new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "1489097568340480517")).create();
  }
  private static ConceptDescriptor createDescriptorForTableRow() {
    return new ConceptDescriptorBuilder("DanMu.structure.TableRow", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x2c11b20feacb25cfL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x2c11b20feacb282fL, "id", new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "3175514993706346543"))).properties("id").sourceNode(new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "3175514993706345935")).create();
  }
  private static ConceptDescriptor createDescriptorForTween() {
    return new ConceptDescriptorBuilder("DanMu.structure.Tween", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0xdd955d58d0549acL)).super_("DanMu.structure.Command").version(1).super_(MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee2931500f2L)).parents("DanMu.structure.Command").parentIds(MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee2931500f2L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0xcc3630eebae1eb6L, "type", new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "919687664648462006")), new ConceptDescriptorBuilder.Prop(0xcc3630eebae1eb8L, "from", new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "919687664648462008")), new ConceptDescriptorBuilder.Prop(0xcc3630eebae1ebbL, "to", new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "919687664648462011"))).properties("type", "from", "to").referenceDescriptors(new ConceptDescriptorBuilder.Ref(0xdd955d58d0549adL, "projectile", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x28d96df7e798c925L), true, new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "997923168121604525"))).references("projectile").alias("tween", "").sourceNode(new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "997923168121604524")).create();
  }
  private static ConceptDescriptor createDescriptorForWait() {
    return new ConceptDescriptorBuilder("DanMu.structure.Wait", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x14aa56594cd7c79dL)).super_("DanMu.structure.Command").version(1).super_(MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee2931500f2L)).parents("DanMu.structure.Command").parentIds(MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x4a317ee2931500f2L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x14aa56594cd7c79eL, "second", new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "1489097568340658078")), new ConceptDescriptorBuilder.Prop(0x1149ba63db400b66L, "pastSeond", new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "1245731709987588966"))).properties("second", "pastSeond").childDescriptors(new ConceptDescriptorBuilder.Link(0x7f0162d4dd3621c8L, "char", MetaIdFactory.conceptId(0xf308bac3fb954e51L, 0x8457a8a5d4e826acL, 0x2c11b20feacb25cfL), true, false, false, new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "9151704584177459656"))).children(new String[]{"char"}, new boolean[]{false}).alias("wait", "wait for seconds").sourceNode(new SNodePointer("r:b40d0fbc-02b9-4610-8f73-cca0220c0e06(DanMu.structure)", "1489097568340658077")).create();
  }
}
