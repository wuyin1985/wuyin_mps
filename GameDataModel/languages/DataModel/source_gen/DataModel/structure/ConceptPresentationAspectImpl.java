package DataModel.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_BoolValue = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ChildString = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_LuaTable = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_LuaTableField = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_LuaTableReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Model = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_NumberReference = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_NumberValue = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Resource = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ResourceItem = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ResourceMoney = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_StringValue = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Value = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ValueAssignment = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ValueTransform = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case 0:
        return props_BoolValue;
      case 1:
        return props_ChildString;
      case 2:
        return props_LuaTable;
      case 3:
        return props_LuaTableField;
      case 4:
        return props_LuaTableReference;
      case 5:
        return props_Model;
      case 6:
        return props_NumberReference;
      case 7:
        return props_NumberValue;
      case 8:
        return props_Resource;
      case 9:
        return props_ResourceItem;
      case 10:
        return props_ResourceMoney;
      case 11:
        return props_StringValue;
      case 12:
        return props_Value;
      case 13:
        return props_ValueAssignment;
      case 14:
        return props_ValueTransform;
    }
    throw new IllegalStateException("Unknown concept " + c);
  }
}
